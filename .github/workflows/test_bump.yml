name: Test Bump

on:
  push:
    branches-ignore:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test Bump
    steps:
      # To use this repository's private action,
      # you must check out the repository
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        run: npm install


      # simple test on fixed test data
      - name: Test patch on simple format
        run: |
          version=$(node . bump  --patch    testdata/simple/ProjectSettings.asset)
          echo ${version}
          echo "version=${version}" >> $GITHUB_OUTPUT
        id: simple_patch
      - name: Print results
        run: echo ${{ steps.simple_patch.outputs.version }}
      - name: Verify results
        run: |
          if [ "${{ steps.simple_patch.outputs.version }}" == "1.2.4" ]; then
            echo "Version matches"
          else
            echo "Version mismatch"
            exit -1
          fi

      - name: Test minor on simple format
        run: |
          version=$(node . bump  --minor    testdata/simple/ProjectSettings.asset)
          echo ${version}
          echo "version=${version}" >> $GITHUB_OUTPUT
        id: simple_minor
      - name: Print results
        run: echo ${{ steps.simple_minor.outputs.version }}
      - name: Verify results
        run: |
          if [ "${{ steps.simple_minor.outputs.version }}" == "1.3.4" ]; then
            echo "Version matches"
          else
            echo "Version mismatch"
            exit -1
          fi

      - name: Test major on simple format
        run: |
          version=$(node . bump  --major    testdata/simple/ProjectSettings.asset)
          echo ${version}
          echo "version=${version}" >> $GITHUB_OUTPUT
        id: simple_major
      - name: Print results
        run: echo ${{ steps.simple_major.outputs.version }}
      - name: Verify results
        run: |
          if [ "${{ steps.simple_major.outputs.version }}" == "2.3.4" ]; then
            echo "Version matches"
          else
            echo "Version mismatch"
            exit -1
          fi

      # simple test with custom regex on fixed test data
      - name: Test on simple format with custom regex
        run: |
          version=$(node . bump  --regex '^(?<major>[0-9]+)\.(?<minor>[0-9]+)\.(?<patch>[0-9]+)$' --major --minor --patch    testdata/simple/ProjectSettings.asset)
          echo ${version}
          echo "version=${version}" >> $GITHUB_OUTPUT
        id: custom
      - name: Print results
        run: echo ${{ steps.custom.outputs.version }}
      - name: Verify results
        run: |
          if [ "${{ steps.custom.outputs.version }}" == "3.4.5" ]; then
            echo "Version matches"
          else
            echo "Version mismatch"
            exit -1
          fi

      # prerelease test on fixed test data
      - name: Test on prerelease format
        run: |
          version=$(node . bump  --major --minor --patch    testdata/prerelease/ProjectSettings.asset)
          echo ${version}
          echo "version=${version}" >> $GITHUB_OUTPUT
        id: prerelease
      - name: Print results
        run: echo ${{ steps.prerelease.outputs.version }}
      - name: Verify results
        run: |
          if [ "${{ steps.prerelease.outputs.version }}" == "2.3.4-beta.5" ]; then
            echo "Version matches"
          else
            echo "Version mismatch"
            exit -1
          fi

      # buildmeta test on fixed test data
      - name: Test on buildmetadata format
        run: |
          version=$(node . bump  --major --minor --patch    testdata/buildmeta/ProjectSettings.asset)
          echo ${version}
          echo "version=${version}" >> $GITHUB_OUTPUT
        id: buildmeta
      - name: Print results
        run: echo ${{ steps.buildmeta.outputs.version }}
      - name: Verify results
        run: |
          if [ "${{ steps.buildmeta.outputs.version }}" == "2.3.4+foobar.42" ]; then
            echo "Version matches"
          else
            echo "Version mismatch"
            exit -1
          fi

      # complex test on fixed test data
      - name: Test on complex format
        run: |
          version=$(node . bump  --major --minor --patch    testdata/complex/ProjectSettings.asset)
          echo ${version}
          echo "version=${version}" >> $GITHUB_OUTPUT
        id: complex
      - name: Print results
        run: echo ${{ steps.complex.outputs.version }}
      - name: Verify results
        run: |
          if [ "${{ steps.complex.outputs.version }}" == "2.3.4-beta.5+foobar.42" ]; then
            echo "Version matches"
          else
            echo "Version mismatch"
            exit -1
          fi
